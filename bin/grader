#!/usr/bin/bash


pushd `dirname $0`"/.."
prjdir=`pwd`
popd

function compile_dir {
    if [ -d $1 ]; then
	
	pushd $1
	if [ "$os" = "Cygwin" ]; then
    	    cdir=`cygpath -w $2`
	else
    	    cdir=$2
	fi
	echo "Compiling $d"
	encoding=
	encodingopt=
	find . -name \*.java -print0 | grep -zv __MACOSX | xargs -0 file | grep -i UTF-8 && encoding="UTF-8" && encodingopt="-encoding"
	find . -name \*.java -print0 | grep -zv __MACOSX | xargs -0 javac -classpath "$classpath" $encodingopt $encoding -d "$cdir"
	popd
    else
	echo "Failed to compile non-existant dir: $1"
    fi
}

# $1 = Assignment name
subzip=$HOME/Downloads/submissions.zip
if [ -z "$1" ]; then
    echo "$0 <assignment>"
    echo "    Specify the name of the assignment"
    echo "    Assumes $subzip"
    exit 2
fi

reqdir="$prjdir/src/req/$1"
reqclasses=/tmp/$1/classes

classpath=.:$reqclasses
os=`uname -o`
if [ "$os" = "Cygwin" ]; then
    classpath=`cygpath -pw $classpath`
fi

test -f /tmp/$1.zip && rm -rf /tmp/$1.zip 
test -d /tmp/$1 &&  rm -rf /tmp/$1
cp $subzip /tmp/$1.zip
mkdir -p $reqclasses

compile_dir "$reqdir" $reqclasses

cd /tmp/$1
unzip /tmp/$1.zip


for f in *
do
    echo START "$f"
    cd /tmp/$1
    test -f "$f" || continue

    SAVEIFS=$IFS
    IFS=$(echo -en "\n\b")
    d=`echo  "$f" | awk -F_ '{print $1}'`
    for fil in `ls  ${d}_[0-9]*_[0-9]*_*`; do
	id=`echo  $fil | awk -F_ '{print $2 "_" $3}'`
	ff=`echo  $fil | awk -F_ '{print $4}'`
	#echo "ID=$id"
	echo "Moving $fil to $d/$ff"
	test -d $d || mkdir $d
	mv $fil $d/$ff
    done
    IFs=$SAVEIFS

    cd $d
    

    for z in `find . -name  \*.zip`; do
	unzip $z
    done

    for z in `find . -name  \*.7z`; do
	7za l $z
	7za x $z
    done

    test -d classes || mkdir classes
    compile_dir . classes
    ##find . -name \*.java | grep -v __MACOSX | xargs javac -d classes
    emacsclient -n `find . -name \*.java ` &

    cd classes

    pp=`find * -name \*.class`
    if [ "${pp}x" = "x" ]; then
	echo "ERROR: Failed to compile"

    else
	main_class_file=""
	for clazz in $pp; do
	    jp=`javap $clazz | awk '/main/'`
	    if [ "${jp}x" != "x" ]; then
		main_class_file=$clazz
	    fi
	done
	main_class=`echo $main_class_file | sed 's/[/]/./g'`
	p=`basename $main_class .class`
	echo "Start execution of $p for $d"
	echo
	java -cp "$classpath" $p | tee ../output.log	    
	echo
	echo "Complete execution of $p for $d"

    fi

    echo 
    read -p  "END $f - Press enter"
done
